We need a view on the content.

    >>> request = layer['request']
    >>> portal = layer['portal']
    >>> from zope.publisher.browser import BrowserView
    >>> view = BrowserView(portal, request)

    >>> from plone.app.layout.viewlets.interfaces import IHtmlHead, IPortalFooter
    >>> from Products.Five.viewlet.manager import ViewletManager
    >>> Footer = ViewletManager('left', IPortalFooter)

Now we can instantiate the manager.

    >>> manager = Footer(portal, request, view)
    >>> manager.update()
    >>> for viewlet in manager.viewlets:
    ...     if viewlet.__name__ == "plone.analytics":
    ...         analytics = viewlet
    ...         break

When no analytics (webstats_js) code is set up the viewlet will not be rendered:

    >>> analytics.webstats_js == ""
    True
    >>> text = manager.render()
    >>> 'id="plone-analytics"' in text
    False

Set the analytics code through the controlpanel and verify it renders properly:

    >>> from plone.registry.interfaces import IRegistry
    >>> from zope.component import getUtility
    >>> from plone.base.interfaces import ISiteSchema
    >>> registry = getUtility(IRegistry)
    >>> site_settings = registry.forInterface(ISiteSchema, prefix="plone")
    >>> site_settings.webstats_js = u"<script>window.title='Hello'</script>"
    >>> analytics.webstats_js == site_settings.webstats_js
    True
    >>> text = manager.render()
    >>> 'id="plone-analytics"' in text
    True
    >>> site_settings.webstats_js in text
    True

Now enter some non-ascii text

    >>> site_settings.webstats_js = u"<script>window.title='C\xedsa\u0159'</script>"
    >>> text = manager.render()
    >>> "<script>window.title='Císař'</script>" in text
    True

Now instantiate a viewlet manager for the header.

    >>> Head = ViewletManager('left', IHtmlHead)
    >>> manager = Head(portal, request, view)
    >>> manager.update()
    >>> for viewlet in manager.viewlets:
    ...     if viewlet.__name__ == "plone.analytics.head":
    ...         analytics_head = viewlet
    ...         break

When no analytics (webstats_head_js) code is set up the viewlet will not be rendered:

    >>> analytics_head.webstats_js == ""
    True
    >>> text = manager.render()
    >>> 'plone.analytics.head goes here' in text
    False

Set the analytics code through the controlpanel and verify it renders properly:

    >>> from plone.registry.interfaces import IRegistry
    >>> from zope.component import getUtility
    >>> from plone.base.interfaces import ISiteSchema
    >>> registry = getUtility(IRegistry)
    >>> site_settings = registry.forInterface(ISiteSchema, prefix="plone")
    >>> site_settings.webstats_head_js = u"<script>window.title='Hello'</script>"
    >>> analytics_head.webstats_js == site_settings.webstats_head_js
    True
    >>> text = manager.render()
    >>> 'plone.analytics.head goes here' in text
    True
    >>> site_settings.webstats_head_js in text
    True

If we add other tags than script tags, we only render the script tags.

    >>> site_settings.webstats_head_js = u"<script>window.title='Hello'</script><link rel='stylesheet' src='teststyle.css'/>"
    >>> text = manager.render()
    >>> "<link rel='stylesheet' src='teststyle.css'/>" in text
    False
    >>> site_settings.webstats_head_js in text
    False
    >>> "<script>window.title='Hello'</script>" in text
    True

Now enter some tags we don't want to render, like a <base> and <title> tag,
since they should occur only once and is set by Plone. <style>, <script> and
<link> tags are allowed.

    >>> site_settings.webstats_head_js = u"<base href='some-url' /><title>Get's removed</title><link rel='stylesheet' src='teststyle.css' /><script>window.title='C\xedsa\u0159'</script>"
    >>> text = manager.render()
    >>> '<link rel="stylesheet" src="teststyle.css">' in text
    True
    >>> "<base href='some-url'>" in text
    False
    >>> "<title>Get's removed</title>" in text
    False
    >>> "<script>window.title='Císař'</script>" in text
    True

Final check, if we have bogus content in here, will things break?

    >>> site_settings.webstats_head_js = u"console.log('Missing script tag')"
    >>> text = manager.render()
    >>> "console.log('Missing script tag')" in text
    False